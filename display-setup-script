#!/bin/bash
# Generic bash options which I always use for safety. Not all may be needed for this particular script.
set -o nounset
set -o pipefail
set -o errexit
set -o errtrace
trap 'echo "Error at line $LINENO, exit code is $?" >&2' ERR
shopt -s nullglob
shopt -s failglob

# CONFIGURATION ################################################################
DEBUG=0
LOG='/var/log/thinkpad-w530-dock.log'
################################################################################

if [ "$DEBUG" = 1 ] ; then
	touch "$LOG"
	chown root:root "$LOG"
	chmod 700 "$LOG"
	exec &>> "$LOG"
fi

l() {
	echo "$(date --rfc-3339=seconds): display-setup-script $$: $@"
}

l "Started..."

if [ $# -ne 1 ] ; then
	# We want to wait for bumblebeed to start, but it is started after LightDM.
	# So if we don't exit this script now then LightDM will wait for it
	# forever, and bumblebee won't be started because of that, so we would be
	# deadlocked.
	l "Forking worker child process so LightDM doesn't wait for us..."
	nohup "$0" "child" &> /dev/null &
	exit 0
elif [ "$1" != child ] ; then
	l "Unknown argument: $1" >&2
	exit 1
fi

l "Child is waiting for bumblebeed to start..."
time=0
while ! pgrep --count bumblebeed > /dev/null ; do
	sleep 0.1s
	if ((++time >= 600)); then
		l "Timed out waiting for bumblebeed! Exiting!" >&2
		exit 1
	fi
done

l "Finished: bumblebeed running. Calling dock-handler..."
# Workaround for the mouse not working after login.
# FIXME: Does this even help?
sleep 10s
/root/.bin/bumblebee-multiscreen-tools/dock-handler
exit 0
